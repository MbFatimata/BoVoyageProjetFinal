@model BoVoyageProjetFinal.Areas.BackOffice.Models.ClientBOViewModel

@{
    ViewBag.Title = "Index";
}

<h2>Liste des clients</h2>

<p>
    <a href="@Url.Action("Create")" class="btn btn-info"><i class="fa fa-plus"></i> Ajouter un client</a>
</p>

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#ClientSearch">
    Chercher un client
</button>

<!-- Modal -->
<div class="modal fade" id="ClientSearch" tabindex="-1" role="dialog" aria-labelledby="ClientSearchLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ClientSearchLabel">Recherche de clients</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm())
            {
                <div class="modal-body">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BirthdateBefore, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BirthdateBefore, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BirthdateBefore, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BirthdateAfter, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BirthdateAfter, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BirthdateAfter, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Rechercher" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>

@if (Model.ClientsBO != null)
{
    <table class="table table-bordered table-striped">
        <tr>
            <th>
                Nom
            </th>
            <th>
                Prénom
            </th>
            <th>
                Né(e) le
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.ClientsBO)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Birthdate)
            </td>
            <td>
                <a href="@Url.Action("Edit", new { id = item.ID })" data-toggle="tooltip" data-placement="top" title="Editer"><i class="fa fa-edit text-warning"></i></a>
                <a href="@Url.Action("Details", new { id = item.ID })" data-toggle="tooltip" data-placement="top" title="Detail"><i class="fa fa-search"></i></a>
                <a href="@Url.Action("Delete", new { id = item.ID })" data-toggle="tooltip" data-placement="top" title="Supprimer"><i class="fa fa-trash"></i></a>
            </td>
        </tr>
        }
    </table>
}